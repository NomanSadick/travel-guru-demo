[{"C:\\WebDevelopment\\travel-guru\\src\\App.js":"1","C:\\WebDevelopment\\travel-guru\\src\\reportWebVitals.js":"2","C:\\WebDevelopment\\travel-guru\\src\\index.js":"3","C:\\WebDevelopment\\travel-guru\\src\\Components\\Header\\Header.js":"4","C:\\WebDevelopment\\travel-guru\\src\\fakeData\\travelLocation.js":"5","C:\\WebDevelopment\\travel-guru\\src\\Components\\DetailsPlace\\DetailsPlace.js":"6","C:\\WebDevelopment\\trevel-guru-demo\\src\\index.js":"7","C:\\WebDevelopment\\trevel-guru-demo\\src\\App.js":"8","C:\\WebDevelopment\\trevel-guru-demo\\src\\fakeData\\travelLocation.js":"9","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Header\\Header.js":"10","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\DetailsPlace\\DetailsPlace.js":"11","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Navber\\Navber.js":"12","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Login\\Login.js":"13","C:\\WebDevelopment\\trevel-guru-demo\\src\\reportWebVitals.js":"14","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\HotelBooking\\HotelBooking.js":"15","C:\\WebDevelopment\\trevel-guru-demo\\src\\fakeData\\hotelBooking.js":"16","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Login\\firebase.config.js":"17"},{"size":857,"mtime":1606898819048,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":547,"mtime":1606279652901,"results":"21","hashOfConfig":"19"},{"size":3294,"mtime":1606898043271,"results":"22","hashOfConfig":"19"},{"size":1027,"mtime":1606889068424,"results":"23","hashOfConfig":"19"},{"size":552,"mtime":1606898089177,"results":"24","hashOfConfig":"19"},{"size":547,"mtime":1606279652901,"results":"25","hashOfConfig":"26"},{"size":1161,"mtime":1606997810113,"results":"27","hashOfConfig":"26"},{"size":1027,"mtime":1607008344448,"results":"28","hashOfConfig":"26"},{"size":1968,"mtime":1606923828082,"results":"29","hashOfConfig":"26"},{"size":2370,"mtime":1606923832526,"results":"30","hashOfConfig":"26"},{"size":1674,"mtime":1607006025648,"results":"31","hashOfConfig":"26"},{"size":5865,"mtime":1607094006637,"results":"32","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"26"},{"size":1145,"mtime":1607008012887,"results":"34","hashOfConfig":"26"},{"size":1121,"mtime":1607003235480,"results":"35","hashOfConfig":"26"},{"size":360,"mtime":1607057292168,"results":"36","hashOfConfig":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"17lr3zh",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1zhm2e",{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\WebDevelopment\\travel-guru\\src\\App.js",["82","83","84"],"import logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Header from './Components/Header/Header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport DetailsPlace from './Components/DetailsPlace/DetailsPlace';\nimport { createContext, useState } from 'react';\n\nexport const travelContext = createContext()\n\nfunction App() {\n\n  const [travelInformation, setTravelInformation] = useState()\n\n  return (\n    <travelContext.Provider value={[travelInformation, setTravelInformation]}>\n    <Router>\n      \n      <Switch>\n\n        <Route path=\"/details/:id\">\n          <DetailsPlace></DetailsPlace>\n        </Route>\n        <Route path=\"/\">\n        <Header></Header>\n        </Route>\n      </Switch>\n\n    </Router>\n    </travelContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\WebDevelopment\\travel-guru\\src\\reportWebVitals.js",[],["85","86"],"C:\\WebDevelopment\\travel-guru\\src\\index.js",[],["87","88"],"C:\\WebDevelopment\\travel-guru\\src\\Components\\Header\\Header.js",["89"],"import React, { useContext } from 'react';\r\nimport './Header.css';\r\nimport header from '../../images/header.jpg';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from '../../images/Logo.png'\r\n// import { Link } from '@material-ui/core';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Carousel, Col, Row, } from 'react-bootstrap';\r\nimport travelLocation from '../../fakeData/travelLocation'\r\n\r\nimport { travelContext } from '../../App';\r\n\r\n\r\nconst Header = () => {\r\n    const [travelInformation, setTravelInformation] = useContext(travelContext)\r\n    return (\r\n\r\n        <Container>\r\n            <div style={{ backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(${header})` }} className=\"header\">\r\n\r\n                <nav className=\"nav\">\r\n                    <ul>\r\n                        <li>\r\n                            <img className=\"logo\" src={logo} alt=\"\" />\r\n                        </li>\r\n                        <li>\r\n                            <input className=\"search\" type=\"search\" name=\"\" id=\"\" placeholder=\"Search Your Destination\" />\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/news\">News</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/destination\">Destination</Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/blog\">Blog</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/contracts\">Contracts</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/login\">\r\n                                <button className=\"btn-login\">Login</button>\r\n\r\n                            </Link>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n                <Carousel className=\"carousel\">\r\n                    {travelLocation.map(item =>\r\n                        <Carousel.Item clasName=\"carousel-item\" key={item.id}>\r\n\r\n                            <Row>\r\n\r\n                                <Col>\r\n                                    <Carousel.Caption clasName=\"caption\">\r\n                                        <h4 clasName=\"name\">{item.name}</h4>\r\n                                        <p clasName=\"detail\">{item.detail}</p>\r\n\r\n                                    </Carousel.Caption>\r\n                                    <br />\r\n                                    <Link onClick={() => setTravelInformation(item)} to={'/details/' + item.id}>\r\n                                        <button className=\"btn-booking\">Booking</button>\r\n                                    </Link>\r\n                                </Col>\r\n\r\n                                <Col>\r\n\r\n                                    <div>\r\n                                        <img clssName=\"slider-img\" src={item.image} fluid alt=\"\" />\r\n                                    </div>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </Carousel.Item>\r\n                    )}\r\n\r\n                </Carousel>\r\n\r\n\r\n            </div>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\WebDevelopment\\travel-guru\\src\\fakeData\\travelLocation.js",[],"C:\\WebDevelopment\\travel-guru\\src\\Components\\DetailsPlace\\DetailsPlace.js",["90"],"C:\\WebDevelopment\\trevel-guru-demo\\src\\index.js",[],["91","92"],"C:\\WebDevelopment\\trevel-guru-demo\\src\\App.js",["93","94","95"],"import logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Header from './Components/Header/Header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport DetailsPlace from './Components/DetailsPlace/DetailsPlace';\nimport { createContext, useState } from 'react';\nimport Login from './Components/Login/Login';\nimport HotelBooking from './Components/HotelBooking/HotelBooking';\n\n\nexport const travelContext = createContext()\n\nfunction App() {\n\n  const [travelInformation, setTravelInformation] = useState()\n\n  return (\n    <travelContext.Provider value={[travelInformation, setTravelInformation]}>\n      <Router>\n\n        <Switch>\n\n          <Route path=\"/details/:id\">\n            <DetailsPlace></DetailsPlace>\n          </Route>\n          <Route path=\"/login\">\n            <Login></Login>\n          </Route>\n          <Route path=\"/booking\">\n            <HotelBooking></HotelBooking>\n          </Route>\n          <Route path=\"/\">\n            <Header></Header>\n          </Route>\n        </Switch>\n\n      </Router>\n    </travelContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\WebDevelopment\\trevel-guru-demo\\src\\fakeData\\travelLocation.js",[],["96","97"],"C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Header\\Header.js",["98"],"import React, { useContext } from 'react';\r\nimport './Header.css';\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n// import { Link } from '@material-ui/core';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Carousel, Col, Row, } from 'react-bootstrap';\r\nimport travelLocation from '../../fakeData/travelLocation'\r\n\r\nimport { travelContext } from '../../App';\r\nimport Navber from '../Navber/Navber';\r\n\r\n\r\nconst Header = () => {\r\n    const [travelInformation, setTravelInformation] = useContext(travelContext)\r\n    return (\r\n\r\n        <Container>\r\n            <div>\r\n\r\n                <Navber></Navber>\r\n\r\n                <Carousel className=\"carousel\">\r\n                    {travelLocation.map(item =>\r\n                        <Carousel.Item clasName=\"carousel-item\" key={item.id}>\r\n\r\n                            <Row>\r\n\r\n                                <Col md={8}>\r\n                                    <Carousel.Caption clasName=\"caption\">\r\n                                        <h2 clasName=\"name\">{item.name}</h2>\r\n                                        <p clasName=\"detail\">{item.detail}</p>\r\n\r\n                                    </Carousel.Caption>\r\n\r\n                                    <Link onClick={() => setTravelInformation(item)} to={'/details/' + item.id}>\r\n                                        <button className=\"btn-booking\">Booking</button>\r\n                                    </Link>\r\n                                </Col>\r\n\r\n                                <Col md={4}>\r\n\r\n                                    <div>\r\n                                        <img clssName=\"slider-img\" src={item.image} fluid alt=\"\" />\r\n                                    </div>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </Carousel.Item>\r\n                    )}\r\n\r\n                </Carousel>\r\n\r\n\r\n            </div>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default Header;\r\n",["99","100"],"C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\DetailsPlace\\DetailsPlace.js",["101"],"import React, { useContext } from 'react';\r\nimport './DetailsPlace.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport { travelContext } from '../../App';\r\nimport Navber from '../Navber/Navber';\r\nimport { Container } from 'react-bootstrap';\r\nimport travelLocation from '../../fakeData/travelLocation'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst DetailsPlace = () => {\r\n    const [travelInformation, setTravelInformation] = useContext(travelContext);\r\n    const { id } = useParams();\r\n    const items = travelLocation.find(item => item.id === id)\r\n\r\n    setTravelInformation(items);\r\n\r\n    console.log(items);\r\n\r\n    return (\r\n        <Container>\r\n            <Navber></Navber>\r\n            <div className=\"details-place\">\r\n\r\n                <div>\r\n                    <h2 className=\"name\">{items.name}</h2>\r\n                    <p className=\"details\">{items.detail}</p>\r\n                </div>\r\n                <div className=\"detail-form\">\r\n                    <form action=\"\">\r\n                        <label className=\"detail-form__label\">Origin</label>\r\n                        <input className=\"detail-form__input\" type=\"text\" name=\"from-travel\" id=\"from-travel\" />\r\n                        <label className=\"detail-form__label\">Destination</label>\r\n                        <input className=\"detail-form__input\" value={items.name} type=\"text\" name=\"from-travel\" id=\"from-travel\" />\r\n                        <div className=\"detail-calender\">\r\n                            <div className=\"calender-segment\">\r\n                                <TextField id=\"date\" label=\"From\" type=\"date\" className=\"detail-form__input calender-main\"\r\n                                    defaultValue=\"2020-12-05\" InputLabelProps={{ shrink: true, }} />\r\n                            </div>\r\n                            <div className=\"calender-segment\">\r\n                                <TextField id=\"date\" label=\"To\" type=\"date\" className=\"detail-form__input calender-main\"\r\n                                    defaultValue=\"2020-12-10\" InputLabelProps={{ shrink: true, }} />\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"detail-btn\">Start Booking</button>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DetailsPlace;","C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Navber\\Navber.js",[],"C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Login\\Login.js",["102","103"],"import { TextField, Button, Checkbox } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Navber from '../Navber/Navber';\r\nimport './Login.css'\r\nimport facebook from \"../../images/fb.png\";\r\nimport google from \"../../images/google.png\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    const [user, setUser] = useState({\r\n        isSignedIn:false,\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        password:'',\r\n        photo:''\r\n      })\r\n\r\n    const [newUser, setNewUser] = useState(false)\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setChecked(e.target.checked);\r\n    }\r\n\r\n    const handleGoogleSignIn = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                var errorCode = err.code;\r\n                var errorMessage = err.message;\r\n                console.log(errorCode, errorMessage);\r\n\r\n            });\r\n    }\r\n\r\n    const handleSubmit = () =>{\r\n\r\n    }\r\n\r\n    const handleBlur = (e) =>{\r\n        console.log(e.target.name, e.target.value);\r\n\r\n        let isFieldValid = true;\r\n        if(e.target.name === 'email'){\r\n            \r\n            isFieldValid = /(.+)@(.+){2,}\\.(.+){2,}/.test(e.target.value); \r\n            \r\n        }\r\n\r\n        if(e.target.name === 'password'){\r\n            const isPasswordValid  = e.target.value.length > 8;\r\n            const passwordHasNumber  = /\\d/.test(e.target.value);\r\n            isFieldValid = isPasswordValid && passwordHasNumber;\r\n        }\r\n\r\n\r\n        if(e.target.name === 'confirm password'){\r\n            const isPasswordValid  = e.target.value.length > 8;\r\n            const passwordHasNumber  = /\\d/.test(e.target.value);\r\n            isFieldValid = isPasswordValid && passwordHasNumber;\r\n        }\r\n\r\n        if(isFieldValid){\r\n            const newUserInfo = {...user};\r\n             newUserInfo[e.target.name] = e.target.value;\r\n             setUser(newUserInfo);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n           <form onSubmit={handleSubmit}>\r\n           <div className=\"login-container\">\r\n                {newUser ?\r\n\r\n                    <div className=\"login-field\">\r\n                        <h3>Login</h3>\r\n                        <TextField className=\"text\" name=\"email\" onBlur={handleBlur} id=\"standard-basic\" type=\"email\" label=\"User or Email\" required/>\r\n                        <br />\r\n                        <TextField className=\"text\" name=\"password\" onBlur={handleBlur} id=\"standard-basic\" type=\"password\" label=\"Password\" required/>\r\n                        <br />\r\n                        <div className=\"remember\">\r\n                            <div>\r\n                                <Checkbox className=\"checkbox\"\r\n                                    checked={checked}\r\n                                    onChange={handleChange}\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                />Remember me\r\n                            </div>\r\n                            <div className=\"forget-password\">\r\n                                <p>Forgot password</p>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"button\" value=\"LOGIN\" className=\"btn\" color=\"secondary\"/>\r\n                        <p>Don't have an account? <a href=\"#login\" onClick={() => setNewUser(!newUser)}>Create an account</a></p>\r\n                    </div>\r\n                    :\r\n\r\n                    <div className=\"login-field\">\r\n                        <h3>Create an account</h3>\r\n                        <TextField className=\"text\" name=\"firstName\" onBlur={handleBlur} id=\"standard-basic\" type=\"name\" label=\"First Name\" required/>\r\n                        <br />\r\n                        <TextField className=\"text\" name=\"lastName\" onBlur={handleBlur} id=\"standard-basic\" type=\"name\"  label=\"Last Name\" required/>\r\n                        <br />\r\n                        <TextField className=\"text\" name=\"email\" onBlur={handleBlur} id=\"standard-basic\" type=\"email\" label=\"User or Email\" required/>\r\n                        <br />\r\n                        <TextField className=\"text\" name=\"password\" onBlur={handleBlur} id=\"standard-basic\" type=\"password\" label=\"Password\" required/>\r\n                        <br />\r\n                        <TextField className=\"text\" name=\"confirm password\" onBlur={handleBlur} id=\"standard-basic\" type=\"password\" label=\"Confirm Password\" required/>\r\n                        <br />\r\n                        <input type=\"button\" value=\"CREATE AN ACCOUNT\" className=\"btn\" color=\"secondary\"/>\r\n                        <p>Already have an account? <a href=\"#login\" onClick={() => setNewUser(!newUser)}>Login</a> </p>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n                <p className=\"login-or\"><div></div><span>Or</span><div></div></p>\r\n                <div className=\"login-with\">\r\n                    <img className=\"login-image\" src={facebook} alt=\"Facebook\" />\r\n                    <p>Login with Facebook</p>\r\n                    <div></div>\r\n                </div>\r\n                <div className=\"login-with\">\r\n                    <img className=\"login-image\" src={google} alt=\"Facebook\" />\r\n                    <button onClick={handleGoogleSignIn}><p>Login with Google</p></button>\r\n                    <div></div>\r\n                </div>\r\n\r\n           </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\WebDevelopment\\trevel-guru-demo\\src\\reportWebVitals.js",[],"C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\HotelBooking\\HotelBooking.js",[],"C:\\WebDevelopment\\trevel-guru-demo\\src\\fakeData\\hotelBooking.js",[],"C:\\WebDevelopment\\trevel-guru-demo\\src\\Components\\Login\\firebase.config.js",[],{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":9,"column":3,"nodeType":"106","messageId":"107","endLine":9,"endColumn":7},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"104","severity":1,"message":"116","line":17,"column":12,"nodeType":"106","messageId":"107","endLine":17,"endColumn":29},{"ruleId":"104","severity":1,"message":"117","line":7,"column":31,"nodeType":"106","messageId":"107","endLine":7,"endColumn":51},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":9,"column":3,"nodeType":"106","messageId":"107","endLine":9,"endColumn":7},{"ruleId":"110","replacedBy":"120"},{"ruleId":"112","replacedBy":"121"},{"ruleId":"104","severity":1,"message":"116","line":18,"column":12,"nodeType":"106","messageId":"107","endLine":18,"endColumn":29},{"ruleId":"110","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"104","severity":1,"message":"116","line":11,"column":12,"nodeType":"106","messageId":"107","endLine":11,"endColumn":29},{"ruleId":"104","severity":1,"message":"108","line":1,"column":21,"nodeType":"106","messageId":"107","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"124","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],"'travelInformation' is assigned a value but never used.","'setTravelInformation' is assigned a value but never used.",["125"],["126"],["125"],["126"],["125"],["126"],"'Navber' is defined but never used.","no-global-assign","no-unsafe-negation"]